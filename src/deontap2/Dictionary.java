package deontap2;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class Dictionary extends javax.swing.JFrame {

    /**
     * Creates new form SearchWord
     */
    List<Word> wordList = new ArrayList<>();

    private void initDictionary() {
        wordList.add(new Word(1, "apple", "quả táo"));
        wordList.add(new Word(2, "book", "quyển sách"));
        wordList.add(new Word(3, "car", "xe hơi"));
        wordList.add(new Word(4, "cat", "con mèo"));
        wordList.add(new Word(5, "computer", "máy tính"));
        wordList.add(new Word(6, "dog", "con chó"));
        wordList.add(new Word(7, "hello", "xin chào"));
        wordList.add(new Word(8, "phone", "điện thoại"));
        wordList.add(new Word(9, "school", "trường học"));
        wordList.add(new Word(10, "water", "nước"));
    }

    public Dictionary() {
        initComponents();
        initDictionary();
        setResizable(false);
        setLocationRelativeTo(null);
        txResult.setEnabled(false);
        displayListWord();
    }

    private void displayListWord() {
        System.out.println("Danh sách từ điển đã sắp xếp:");
        for (Word word : wordList) {
            word.display();
        }
    }

    private void addWord(String en) {
        if (findWord(en) != null) {
            JOptionPane.showMessageDialog(null, "Từ này đã có trong từ điển rồi !");
            return;
        }
        String inputVn = JOptionPane.showInputDialog("Nhập nghĩa tiếng việt của từ này");
        if (inputVn.trim().isEmpty()) {
            return;
        }
        int newId = wordList.isEmpty() ? 1 : wordList.get(wordList.size() - 1).getId() + 1;
        wordList.add(new Word(wordList.size(), en, inputVn));
        sortDictionary();
        JOptionPane.showMessageDialog(null, "Thêm từ mới thành công!");
        displayListWord();
    }

    // Thuật toán tìm kiếm nhị phân
    private Word findWord(String en) {
        int left = 0;
        int right = wordList.size() - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2; // Tìm chỉ số giữa
            Word midWord = wordList.get(mid);
            int checkWord = midWord.getEn().compareToIgnoreCase(en);

            if (checkWord == 0) {
                return midWord; // Tìm thấy từ
            } else if (checkWord < 0) {
                left = mid + 1; // Từ cần tìm nằm bên phải
            } else {
                right = mid - 1; // Từ cần tìm nằm bên trái
            }
        }
        return null; // Không tìm thấy từ
    }

    // Sắp xếp từ điển
    private void sortDictionary() {
        Collections.sort(wordList, new Comparator<Word>() {
            @Override
            public int compare(Word w1, Word w2) {
                return w1.getEn().compareToIgnoreCase(w2.getEn());
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txInputWord = new javax.swing.JTextField();
        txResult = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tra từ điển v1.0");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Tìm kiếm từ điển");

        jLabel2.setText("Từ ngữ:");

        jLabel3.setText("Kết quả:");

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(87, 87, 87))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txInputWord, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txResult))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btnSearch)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addComponent(txInputWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnSearch)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String wordCheck = txInputWord.getText().trim();
        if (wordCheck.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Chưa nhập từ cần tìm ><");
            return;
        }

        Word result = findWord(wordCheck);
        if (result != null) {
            txResult.setText(result.getVn());
        } else {
            addWord(wordCheck);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dictionary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txInputWord;
    private javax.swing.JTextField txResult;
    // End of variables declaration//GEN-END:variables
}
